@use "../../../../scss/breakpoints" as b;

.container {
  display: flex;
  flex-direction: column;
  // border: 1px solid
  //   ${(p) => (p.inUse ? "var(--color-primary)" : "var(--color-border)")};
  box-shadow: var(--box-shadow);
  border-radius: var(--border-radius);

  .btn {
    padding: 10px;
    display: flex;
    align-items: center;
    justify-content: space-between;
    -webkit-user-select: none;
    user-select: none;
    cursor: pointer;
    //   width: ${(p) => p.styles.btnWidth};
    //   min-height: ${(p) => p.styles.btnHeight};
    //   max-height: ${(p) => p.styles.btnHeight};
    font-size: 1.2rem;
    color: var(--color-text);
  }

  .icon-wrap {
    display: flex;
  }

  .icon {
    // transform: ${(p) => (p.flipped ? "rotateX(180deg)" : "rotateX(0deg)")};
    height: 1.5rem;
    fill: var(--color-text);
    transition: 0.1s linear;
  }

  &:hover .icon {
    fill: var(--color-primary);
  }

  .menu {
    height: 0;
    visibility: hidden;
    opacity: 0;
    transition: 0.1s;
    display: flex;
    flex-direction: column;
    gap: 10px;
    //   min-width: ${(props) => props.styles.menuMinWidth};
    //   max-width: ${(props) => props.styles.menuMaxWidth};
    cursor: default;
    &.open {
      visibility: visible;
      opacity: 1;
      padding: 0 10px 10px 10px;
      height: 100%;
    }
    &.closed {
      visibility: hidden;
      opacity: 0;
      padding: 0;
      height: 0;
    }
  }
}
